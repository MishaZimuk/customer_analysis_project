notes = {
    "avg_days_between_orders_analysis": "Calculates the average number of days between consecutive orders for each customer to assess purchase frequency.",
    "basic_overview": "Provides a high-level summary of key customer and order metrics for quick business insights.",
    "churn_status_analysis": "Identifies customers at risk of churn and those who have already churned to guide retention strategies.",
    "cohort_analysis": "Analyzes customer cohorts based on their first purchase date to track retention trends over time.",
    "customer_lifecycle_analysis": "Classifies customers as active, inactive, or at risk to prioritize engagement efforts.",
    "customer_lifetime_analysis": "Calculates the total active period of each customer from first to last purchase to evaluate engagement length.",
    "first_second_delay_analysis": "Measures the time gap between a customer's first and second purchase to assess onboarding success.",
    "ltv_analysis": "Estimates the total revenue generated by each customer over their lifetime to guide investment decisions.",
    "monthly_growth_analysis": "Tracks monthly growth in revenue and customer base to evaluate business momentum.",
    "new_vs_returning_analysis": "Compares the proportion and revenue contribution of new versus returning customers.",
    "repeat_rate_analysis": "Calculates the percentage of customers who make repeat purchases within a given time frame.",
    "retention_analysis": "Measures the percentage of customers retained over time to assess loyalty programs and satisfaction.",
    "rfm_analysis": "Segments customers based on Recency, Frequency, and Monetary value to target different behavior groups.",
    "segment_analysis": "Analyzes predefined customer segments to understand revenue distribution and behavior patterns.",
    "avg_order_value_by_hour_analysis": "Analyzes average order value by hour of the day to detect peak-value time slots.",
    "orders_by_day_of_month_analysis": "Tracks order counts for each day of the month to identify demand patterns and payday effects.",
    "orders_by_day_of_week_analysis": "Compares order volumes by weekday to optimize operations and marketing schedules.",
    "orders_by_hour_analysis": "Analyzes order volumes by hour to identify peak activity periods.",
    "orders_by_month_analysis": "Shows monthly order trends to evaluate seasonality and growth patterns.",
    "orders_heatmap_analysis": "Visualizes orders by hour and weekday as a heatmap to highlight peak demand periods.",
    "revenue_by_hour_analysis": "Tracks hourly revenue to identify high-revenue time slots and optimize promotions."
} 

def get_notes(key: str) -> str: return notes.get(key, "")
